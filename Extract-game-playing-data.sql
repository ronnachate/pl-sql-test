SET SERVEROUTPUT ON
SET VERIFY OFF
SET FEEDBACK OFF

DECLARE
--Cursor   
   CURSOR USER_LIST IS SELECT COLUMN2 AS FULLNAME,COLUMN3 AS USER_ID FROM TMP_DATA GROUP BY COLUMN2,COLUMN3;
   CURSOR PLAYING_LIST IS SELECT U.ID AS USER_ID,T.COLUMN4 AS SCORE,T.COLUMN5 AS PLAY_TIME FROM
      TMP_DATA T JOIN USERS U ON T.COLUMN3 = U.USER_ID;
---- Function   
   FUNCTION CREATE_USERS_DATA RETURN BOOLEAN IS
   BEGIN
     --delete all users, due to we didn't verified duplicated user inseted.
     DELETE FROM USERS;
--   FOR USER_DATA IN ( SELECT COLUMN2 AS FULLNAME,COLUMN3 AS USER_ID FROM TMP_DATA GROUP BY COLUMN2,COLUMN3 )
     FOR USER_DATA IN USER_LIST
     LOOP
        INSERT INTO USERS(FULLNAME,USER_ID) VALUES(USER_DATA.FULLNAME,USER_DATA.USER_ID);
     END LOOP;    
--         INSERT INTO USERS(FULLNAME)
--         SELECT COLUMN2,COLUMN3 FROM TMP_DATA GROUP BY COLUMN2;
     RETURN TRUE;
   EXCEPTION
      WHEN OTHERS THEN
         RETURN FALSE;
   END CREATE_USERS_DATA;
   PROCEDURE INSERT_GAME_PLAYING_DATA IS
   BEGIN
      DELETE FROM GAME_PLAYING;
      DELETE FROM REJECT_PLAY_DATA;
      FOR PLAY_DATA IN PLAYING_LIST
      LOOP
         BEGIN
            INSERT INTO GAME_PLAYING(USER_ID,SCORE,PLAY_TIME)
            VALUES(
               PLAY_DATA.USER_ID,
               PLAY_DATA.SCORE,
               TO_TIMESTAMP(PLAY_DATA.PLAY_TIME,'YYYY-MM-DD HH24:MI:SS'));
         EXCEPTION
            WHEN OTHERS THEN
               INSERT INTO REJECT_PLAY_DATA
               VALUES PLAY_DATA;
         END;
      END LOOP;
   END INSERT_GAME_PLAYING_DATA;
BEGIN
COMMIT;
   IF CREATE_USERS_DATA THEN
      INSERT_GAME_PLAYING_DATA;
      DBMS_OUTPUT.PUT_LINE('Completed');
   ELSE
      DBMS_OUTPUT.PUT_LINE('Create user data failed');
   END IF;
COMMIT;
END;
