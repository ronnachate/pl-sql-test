SET SERVEROUTPUT ON;
DECLARE
  ----CURSOR
   I_SUCCESS PLS_INTEGER := 0;
   I_FAILED PLS_INTEGER := 0;
   I_COUNT PLS_INTEGER := 0;
   USER_NOT_GEN EXCEPTION;
   CURSOR TRACK_LOGIN IS SELECT USERNAME, LOGIN_TIME, STATUS FROM LOGIN;
   FUNCTION GEN_USERS RETURN BOOLEAN IS
   BEGIN
      INSERT INTO USERS(USERNAME,FULLNAME)
      SELECT USERNAME,'user ' || USERNAME as FULLNAME FROM LOGIN
      WHERE STATUS = 1 GROUP BY USERNAME;
      RETURN TRUE;
   EXCEPTION
      WHEN OTHERS THEN
         RETURN FALSE;
   END GEN_USERS;

  --LOGIN_REC TRACK_LOGIN%ROWTYPE;
  BEGIN
     --COMMIT;
     IF NOT GEN_USERS THEN
       RAISE USER_NOT_GEN;
     END IF;
     
     FOR RESULT_TABLE IN TRACK_LOGIN
     LOOP
        I_COUNT := I_COUNT+1;
        CASE RESULT_TABLE.STATUS
           WHEN 0 THEN
              INSERT INTO FAILED_LOGIN VALUES(RESULT_TABLE.USERNAME,RESULT_TABLE.LOGIN_TIME);
              I_FAILED := I_FAILED + 1;
           WHEN 1 THEN
              INSERT INTO SUCCESS_LOGIN
              SELECT USER_ID,RESULT_TABLE.LOGIN_TIME FROM USERS WHERE USERNAME = RESULT_TABLE.USERNAME;
              I_SUCCESS := I_SUCCESS + 1;
           ELSE
              --Reject to reject_login
              INSERT INTO REJECT_LOGIN VALUES RESULT_TABLE;
        END CASE;
     END LOOP;
     SYS.DBMS_OUTPUT.PUT_LINE('FAILED with ' || I_FAILED);
     SYS.DBMS_OUTPUT.PUT_LINE('SUCCESS with ' || I_SUCCESS);
     SYS.DBMS_OUTPUT.PUT_LINE('FROM total ' || I_COUNT);
  EXCEPTION
     WHEN USER_NOT_GEN THEN
        SYS.DBMS_OUTPUT.PUT_LINE('USER data have not been generate');
  END;
 /
 EXIT;

